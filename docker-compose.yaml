version: '3.7'
name: app

services:
  ###     CONFIG-SERVER   ###

  config-server:
    container_name: config-server
    build: config-server/.
    ports:
      - '8888:8888'
    depends_on:
      discovery-service:
        condition: service_completed_successfully

    ###     DISCOVERY-SERVICE   ###

  discovery-service:
    container_name: discovery-service
    build: discovery-service/.
    ports:
      - '8761:8761'

    ###     ORDER-SERVICE   ###

  order-service:
    container_name: order-service
    build: order-service/.
    ports:
      - '8081:8081'
    depends_on:
      config-server:
        condition: service_completed_successfully
      discovery-service:
        condition: service_completed_successfully
      order-db:
        condition: service_completed_successfully

    ###     ORDER-SERVICE   ###

  order-service2:
    container_name: order-service2
    build: order-service/.
    ports:
      - '8083:8081'
    depends_on:
      config-server:
        condition: service_completed_successfully
      discovery-service:
        condition: service_completed_successfully
      order-db:
        condition: service_completed_successfully

    ###     INVENTORY-SERVICE   ###

  inventory-service:
    container_name: inventory-service
    build: inventory-service/.
    ports:
      - '8082:8082'
    depends_on:
      config-server:
        condition: service_completed_successfully
      discovery-service:
        condition: service_completed_successfully
      inventory-db:
        condition: service_completed_successfully

    ###     PICKUP-SERVICE   ###

  pickup-service:
    container_name: pickup-service
    build: pickup-service/.
    ports:
      - '8084:8084'
    depends_on:
      config-server:
        condition: service_completed_successfully
      discovery-service:
        condition: service_completed_successfully
      pickup-db:
        condition: service_completed_successfully

  ###     ORDER-DB   ###

  order-db:
    container_name: order-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=order_db
    ports:
      - '9999:5432'
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U root -d order_db'"]
      interval: 10s
      timeout: 3s
      retries: 3

  ###     INVENTORY-DB   ###

  inventory-db:
    container_name: inventory-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=inventory_db
    ports:
      - '9998:5432'
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U root -d inventory_db'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  ###     PICKUP-DB   ###

  pickup-db:
    container_name: pickup-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=pickup_db
    ports:
      - '9997:5432'
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U root -d pickup_db'" ]
      interval: 10s
      timeout: 3s
      retries: 3
